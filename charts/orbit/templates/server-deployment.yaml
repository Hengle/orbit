apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orbit.fullname" . }}-server
  labels:
    {{- include "orbit.selectorLabels" . | nindent 4 }}
    chart: {{ include "orbit.chart" . }}
    component: node
  {{- if .Values.node.deployment.annotations }}
  annotations:
  {{- toYaml .Values.node.deployment.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.node.replicas }}
  selector:
    matchLabels:
      {{- include "orbit.selectorLabels" . | nindent 6 }}
      component: node
  template:
    metadata:
      labels:
        {{- include "orbit.selectorLabels" . | nindent 8 }}
        component: node
    spec:
      containers:
        {{- with .Values.node }}
        - name: node
          image: {{ .image.repository }}:{{ .image.tag }}
          imagePullPolicy: {{ .image.pullPolicy | quote }}
          ports:
          - name: grpc
            containerPort: {{ .containerPort }}
          - name: metrics
            containerPort: {{ .metricsPort }}
          env:
          - name: ORBIT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: ORBIT_PORT
            value: {{ .containerPort | quote }}
          - name: ORBIT_URL
            value: "dns:///$(ORBIT_HOST):{{ .containerPort }}"
          - name: ORBIT_SETTINGS
            value: /etc/orbit/config/config.json
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:{{ .containerPort }}"]
            initialDelaySeconds: 5
          livenessProbe:
            exec:
              # SERVING and NOT_SERVING indicate a live service
              command: ["/bin/sh", "-c", "bin/grpc_health_probe -addr=:{{ .containerPort }} 2>&1 | grep -q SERVING"]
            initialDelaySeconds: 10
          volumeMounts:
          - name: configmap
            mountPath: /etc/orbit/config
        {{- end }}
      volumes:
      - name: configmap
        configMap:
          name: {{ include "orbit.fullname" . }}-config
